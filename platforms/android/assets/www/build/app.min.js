function config(e,t,n){t.imgSrcSanitizationWhitelist(/^\s*(https?|ftp|file|blob|content|ms-appx|x-wmapp0):|data:image\/|img\//),t.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|ghttps?|ms-appx|x-wmapp0):/),n.initialize("nYsB6tmBMYKYMzM5iV9BUcBvHWX89ItPX5GfbN6Q","zrin8GEBDVGbkl1ioGEwnHuP70FdG6HhzTS8uGjz"),ionic.Platform.isIOS()&&e.scrolling.jsScrolling(!0)}function routes(e,t){t.otherwise("app/dashboard"),e.state("app",{url:"/app","abstract":!0,cache:!1,templateUrl:"templates/menu.html",controller:"MenuCtrl",resolve:{tournament:function(e){return e.getTournament()}}}).state("app.dashboard",{url:"/dashboard",views:{menuContent:{templateUrl:"templates/dashboard.html",controller:"DashboardCtrl"}}}).state("app.login",{url:"/login",cache:!1,views:{menuContent:{templateUrl:"templates/login.html",controller:"LoginCtrl"}}}).state("app.register",{url:"/register",cache:!1,views:{menuContent:{templateUrl:"templates/register.html",controller:"RegisterCtrl"}}})}function run(e,t,n,r,a){e.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0)),window.StatusBar&&StatusBar.styleDefault(),n.$on("show:loading",function(){r.show({template:'<ion-spinner icon="spiral" class="spinner-calm"></ion-spinner>',showBackdrop:!0,animation:"fade-in"})}),n.$on("hide:loading",function(){r.hide()}),window.ParsePushPlugin&&(console.log("new version 1"),ParsePushPlugin.on("receivePN",function(e){if(console.log(e),e.title)switch(e.title){case"Opponent Found":n.$broadcast("opponent:found");break;case"Opponent Confirmed":n.$broadcast("opponent:confirmed");break;case"Results Entered":n.$broadcast("results:entered")}else a.alert({title:"Announcement",template:'<div class="text-center">'+e.alert+"</div>"}).then(function(e){})}))})}function AdminMatchesCtrl(e,t){}function AdminPlayersCtrl(e,t){}function AdminSettingsCtrl(e,t,n){e.details=n}function DashboardCtrl(e,t,n,r,a,o,s,i,l,c,u,p){function d(){e.match?m():c.getLatestMatch(e.player).then(function(t){t.length&&(e.match=t[0],m())})}function m(){var t=moment(),n=e.match.get("activeDate");if(n){var r=moment(n).add(1,"minutes");e.end.time=parseFloat(r.format("x")),e.end.canPlay=t.isAfter(r,"seconds")}}function h(){e.player.save().then(function(t){e.player=t,g()})}function g(){if(e.player){switch(e.player.get("status")){case"open":e.stop();break;case"queue":e.showOpponents(),v();break;case"found":b();break;case"confirmed":P();break;case"noOpponent":O();break;case"playing":y();break;case"cancelled":playerCancelled()}console.log(e.player.get("status")),d()}}function f(t){var t=t;p.getPlayer(e.tournament,e.user.current()).then(function(n){e.player=n[0],e.player&&(console.log("currentStatus"),g(),t&&e.$broadcast("scroll.refreshComplete"))})}function y(){c.getLatestMatch(e.player).then(function(t){t.length?(e.match=t[0],"completed"===e.match.get("status")&&(e.player.set("status","open"),h())):(e.player.set("status","open"),h())})}function v(){i.Cloud.run("matchmaking")}function b(){c.getLatestMatch(e.player).then(function(t){e.match=t[0],r(function(){if(e.stop(),"pending"===e.match.status){var t=o.show({title:"Matchmaking",template:'<div class="text-center"><strong>A Worthy Opponent</strong><br> has been found!</div>',buttons:[{text:"<b>Confirm</b>",type:"button-positive",onTap:function(e){return!0}}]});t.then(function(t){t?("player1"===e.player.player?e.match.set("confirm1",!0):e.match.set("confirm2",!0),e.match.save().then(function(){e.player.set("status","confirmed"),h()})):(w(),e.player.set("status","open"),h())}),r(function(){"found"===e.player.get("status")&&t.close()},2e4)}"cancelled"===e.match.status&&(e.player.set("status","open"),h())},2e3)})}function w(){var e=o.show({title:"Matchmaking",template:'<div class="text-center">You Failed to Confirm Match</div>',buttons:[{text:"<b>Close</b>",type:"button-positive",onTap:function(e){return!0}}]});e.then(function(e){})}function C(){c.getLatestMatch(e.player).then(function(n){e.match=n[0],e.match.get("status"),t.go("app.match.view")})}function P(){i.Cloud.run("confirmMatch").then(function(e){M(5e3,!1),M(3e4,!0)})}function M(n,a){r(function(){"confirmed"===e.player.get("status")&&c.getLatestMatch(e.player).then(function(n){switch(e.match=n[0],e.match.get("status")){case"pending":a&&(e.player.set("status","noOpponent"),h());break;case"active":e.player.set("status","playing"),s.$broadcast("show:loading"),e.player.save().then(function(){s.$broadcast("hide:loading"),t.go("app.match.view")})}})},n)}function $(){"open"!==e.player.get("status")&&(e.player.set("status","open"),e.player.save().then(function(t){e.player=t,T()}))}function T(){o.alert({title:"Match Played",template:'<div class="text-center">Your Opponent has submitting results</div>'}).then(function(e){})}function O(){o.show({title:"Match Error",template:'<div class="text-center"><strong>Your Opponent</strong><br> failed to confirm!</div>',buttons:[{text:"<b>Back</b>",type:"button-assertive",onTap:function(e){return!1}},{text:"<b>Queue Again</b>",type:"button-positive",onTap:function(e){return!0}}]}).then(function(t){t?(e.player.set("status","queue"),c.getLatestMatch(e.player).then(function(t){e.match=t[0],e.match.set("status","cancelled"),e.match.save().then(function(){h()})})):(e.player.set("status","open"),h())})}function L(){e.myOpponent.name=e.opponent.list[Math.floor(Math.random()*e.opponent.list.length)]}e.tournament=l[0].tournament;var S=null;e.user=i.User,e.end={canPlay:!0,time:parseFloat(moment().format("x"))},e.opponent=u.opponent,e.heroList=u.heroes,e.myOpponent={name:"PAX Attendee"},s.$on("opponent:found",b),s.$on("opponent:confirmed",C),s.$on("results:entered",$),e.$on("$ionicView.enter",function(t){console.log("view loaded"),navigator&&navigator.splashscreen&&navigator.splashscreen.hide(),console.log(e.user.current().username),p.getPlayer(e.tournament,e.user.current()).then(function(t){e.player=t[0],g()})}),e.doRefresh=function(){f(!0)},e.startQueue=function(){e.end.canPlay&&(e.player.set("status","queue"),h())},e.cancelQueue=function(){e.player.set("status","open"),e.stop(),h()},e.stop=function(){a.cancel(S)},e.showOpponents=function(){e.stop(),S=a(function(){L()},2e3)},e.$on("$destroy",function(){e.stop()}),e.finished=function(){r(m,1500)},e.$on("destroy",function(){console.log("controller destroyed")})}function LadderJoinCtrl(e,t,n,r,a,o,s,i,l){function c(){var t=o.defer(),n=e.player.battleTag;if(n.length<8)return t.reject("Enter your full battle tag"),t.promise;var r=n.split("#");return 2!==r.length?(t.reject("Enter your full BATTLETAG™ including # and four digits"),t.promise):r[1].length<2||r[1].length>4?(t.reject("Your BATTLETAG™ must including up to four digits after #!"),t.promise):isNaN(r[1])?(t.reject("Your BATTLETAG™ must including four digits after #"),t.promise):(l.validatePlayer(e.tournament.tournament,n).then(function(e){e.length?t.reject("The BATTLETAG™ you entered is already registered."):t.resolve(n)}),t.promise)}function u(e){return n.alert({title:"Registration Error",template:e})}function p(e){return n.alert({title:"Congratulations "+e.username+"!",template:"You have successfully signed up! Now go find a valiant opponent."})}a.nextViewOptions({disableBack:!0}),e.tournament=i[0].tournament,e.user=s.User.current(),e.player={battleTag:""},e.registerPlayer=function(){c().then(function(t){e.player.username=e.user.username,e.player.status="open",l.joinTournament(e.tournament,e.user,e.player).then(function(e){p(e).then(function(e){r.go("app.dashboard")})})},function(e){u(e)})}}function LeaderBoardsCtrl(e,t,n,r,a,o){function s(){t.getPlayers(n[0].tournament).then(function(t){var n=1;angular.forEach(t,function(e){e.rank=n,n++}),e.players=t,e.$broadcast("scroll.refreshComplete")})}e.user=r.User,s(),e.doRefresh=function(){s()}}function LoginCtrl(e,t,n,r){e.user={},n.User.logOut(),e.loginUser=function(){n.User.logIn(e.user.username,e.user.password,{success:function(e){r.nextViewOptions({disableBack:!0}),window.ParsePushPlugin&&ParsePushPlugin.subscribe(e.username,function(e){console.log("subbed")},function(e){console.log("failed to sub")}),t.go("app.dashboard")},error:function(t,n){e.warning=n.message}})},e.$watch("user",function(t,n){e.warning=null},!0)}function MatchListCtrl(e,t,n,r,a,o){function s(){n.alert({title:"Too Many Reports",template:'<div class="text-center">You have too many pending reports. Please wait.</div>'}).then(function(){})}e.matches=[],e.player=o[0],e.player&&(a.getPlayerMatches(e.player,"completed").then(function(t){e.matches=t}),a.getPlayerMatches(e.player,"reported").then(function(t){e.reported=t})),e.processMatch=function(n){return n.winner.id===e.player.id||n.loser.id===e.player.id&&n.reportReason?void 0:e.reported.length?void s():void t.go("app.match.report",{id:n.id})}}function MatchReportCtrl(e,t,n,r,a,o,s,i){e.match=i,e.picture=null;var l=new o.File,c=null;e.getPicture=function(){var e={quality:90,targetWidth:320,targetHeight:500,destinationType:Camera.DestinationType.DATA_URL,sourceType:0,encodingType:1};navigator.camera.getPicture(u,p,e)};var u=function(t){e.picture="data:image/png;base64,"+t,c=t,e.$apply()},p=function(e){console.log("On fail "+e)};e.processReport=function(n){l=c?new o.File("report.png",{base64:c}):null,e.match.set("reportImage",l),e.match.set("status","reported"),e.match.save().then(function(e){a.nextViewOptions({disableBack:!0}),r.alert({title:"Match Reported",template:'<div class="text-center">Thank you for submitting the report.</div>'}).then(function(){t.go("app.dashboard")})})}}function MatchViewCtrl(e,t,n,r,a,o,s,i,l,c,u,p){function d(){return e.picture=null,e.errorMessage=null,r.show({templateUrl:"templates/popups/win.match.html",title:"Report a Win",scope:e,buttons:[{text:"Cancel"},{text:"<b>Confirm</b>",type:"button-positive",onTap:function(t){return e.picture?!0:(e.errorMessage="Upload a Screenshot",void t.preventDefault())}}]})}function m(){return r.show({templateUrl:"templates/popups/lose.match.html",title:"Report a Loss",scope:e,buttons:[{text:"Cancel"},{text:"<b>Confirm</b>",type:"button-positive",onTap:function(e){return!0}}]})}function h(t){i.getMatch(e.match.id).then(function(n){e.match=n,console.log("match"+e.match.get("status")),t&&e.$broadcast("scroll.refreshComplete")})}function g(e,t){e.set("status","completed"),e.save().then(function(e){n.$broadcast("show:loading"),o.Cloud.run("matchResults",{username:t,match:e.id}).then(function(e){n.$broadcast("hide:loading"),r.alert({title:"Match Submitted",template:'<div class="text-center">Thank you for submitting results</div>'}).then(function(e){})})})}function f(){e.opponent={hero:null,battleTag:null},"player1"===e.player.player&&(e.opponent.hero=e.match.hero2,e.opponent.username=e.match.username2,e.opponent.battleTag=e.match.battleTag2,e.opponent.user=e.match.player2),"player2"===e.player.player&&(e.opponent.hero=e.match.hero1,e.opponent.username=e.match.username1,e.opponent.battleTag=e.match.battleTag1,e.opponent.user=e.match.player1)}e.tournament=c[0].tournament,e.user=o.User,e.end={time:0},e.$on("$ionicView.enter",function(t){e.match=u[0],e.player=p[0],f()}),n.$on("results:entered",h),e.picture=null;var y=(new o.File,null);a.nextViewOptions({disableBack:!0}),e.getPicture=function(){var e={quality:90,targetWidth:320,targetHeight:500,destinationType:Camera.DestinationType.DATA_URL,sourceType:0,encodingType:1};navigator.camera.getPicture(v,b,e)};var v=function(t){e.picture="data:image/png;base64,"+t,y=t,e.$apply()},b=function(e){console.log("On fail "+e)};e.doRefresh=function(){h(!0)},e.record=function(t){i.getLatestMatch(e.player).then(function(n){var r=null;if(e.match=n[0],"active"===e.match.get("status"))switch(t){case"win":d().then(function(t){console.log(t),t&&(e.match.set("winner",e.player),e.match.set("loser",e.opponent.user),r=e.opponent.username,g(e.match,r))});break;case"loss":m().then(function(t){console.log(t),t&&(e.match.set("winner",e.opponent.user),e.match.set("loser",e.player),r=e.opponent.username,g(e.match,r))})}})}}function MenuCtrl(e,t,n,r,a,o){e.user=a.User,t.fromTemplateUrl("templates/popovers/profile.pop.html",{scope:e}).then(function(t){e.popover=t}),e.menu=function(t){r.nextViewOptions({disableBack:!0}),"login"===t?(window.ParsePushPlugin&&ParsePushPlugin.unsubscribe(e.user.current().username,function(e){console.log("subbed")},function(e){console.log("failed to sub")}),a.User.logOut().then(function(e){n.go("app."+t,{reload:!0})})):n.go("app."+t,{reload:!0}),e.popover.hide()},e.$on("$destroy",function(){e.popover.remove()})}function RegisterCtrl(e,t,n,r){function a(e){return r.alert({title:"Registration Error",template:e})}e.user={},e.RegisterUser=function(e){var r=new n.User;r.set(e),r.signUp(null,{success:function(e){t.go("app.dashboard")},error:function(e,t){a(t.message)}})},e.$watch("user",function(t,n){e.warning=null},!0)}function AdminRoutes(e){e.state("app.admin",{url:"/admin","abstract":!0,cache:!1,views:{menuContent:{templateUrl:"templates/admin/admin.html"}}}).state("app.admin.settings",{url:"/settings",cache:!1,templateUrl:"templates/admin/admin.settings.html",controller:"AdminSettingsCtrl",resolve:{tourney:function(e){return e.getTournament()},newTournament:function(e,t){return t.length?t[0]:e.createTournament()}}}).state("app.admin.matches",{url:"/matches",cache:!1,templateUrl:"templates/admin/admin.matches.html",controller:"AdminMatchesCtrl"})}function LadderRoutes(e){e.state("app.ladder",{url:"/ladder","abstract":!0,cache:!1,views:{menuContent:{templateUrl:"templates/ladder/ladder.html"}}}).state("app.ladder.leaderboard",{url:"/leaderboards",cache:!1,templateUrl:"templates/ladder/leaderboard.html",controller:"LeaderBoardsCtrl"}).state("app.ladder.join",{url:"/join",cache:!1,templateUrl:"templates/ladder/join.html",controller:"LadderJoinCtrl"})}function MatchRoutes(e){e.state("app.match",{url:"/match","abstract":!0,views:{menuContent:{templateUrl:"templates/match/match.html"}}}).state("app.match.list",{url:"/view",templateUrl:"templates/match/match.list.html",controller:"MatchListCtrl",cache:!1,resolve:{player:function(e,t,n){return t.getPlayer(n[0].tournament,e.User.current())}}}).state("app.match.view",{url:"/view",templateUrl:"templates/match/match.view.html",controller:"MatchViewCtrl",resolve:{player:function(e,t,n){return t.getPlayer(n[0].tournament,e.User.current())},match:function(e,t,n,r){var a=n.defer();return e.getLatestMatch(r[0]).then(function(e){e.length?a.resolve(e):(a.reject(),t.go("app.dashboard"))}),a.promise}}}).state("app.match.report",{url:"/report/:id",cache:!1,templateUrl:"templates/match/match.report.html",controller:"MatchReportCtrl",resolve:{report:function(e,t){return e.getMatch(t.id)}}})}function LadderServices(e,t){function n(n,r){var a=new e.Query(t.Model);return a.equalTo("tournament",tourney),a.notEqualTO("user",r),a.equalTo("status","queue"),a.find()}function r(n){var r=new e.Query(t.Model);return r.equalTo("tournament",n),r.descending("points","mmr"),r.find()}function a(n,r){var a=new e.Query(t.Model);return a.equalTo("tournament",n),a.equalTo("battleTag",r),a.find()}function o(n,r){var a=new e.Query(t.Model);return a.equalTo("tournament",n),a.equalTo("user",r),a.limit(1),a.find()}function s(e,n,r){var a=new t.Model;return a.set("tournament",e),a.set("user",n),a.set(r),a.set("wins",0),a.set("losses",0),a.set("points",0),a.save()}return{getPlayers:r,getPlayer:o,validatePlayer:a,joinTournament:s,getPendingPlayers:n}}function Ladder(e){var t=e.Object.extend("Ladder"),n=["tournament","user","battleTag","username","hero","player","status","cancelTimer","wins","losses","mmr","points","banReason"];return e.defineAttributes(t,n),{Model:t}}function MatchServices(e,t,n){function r(n,r){var a=new e.Query(t.Model);a.equalTo("player1",n);var o=new e.Query(t.Model);o.equalTo("player2",n);var s=e.Query.or(a,o);return s.limit(10),s.equalTo("status",r),s.find()}function a(n){var r=n.get("player"),a=new e.Query(t.Model);return a.include("winner"),a.include("loser"),a.descending("createdAt"),a.limit(1),"player1"===r?a.equalTo("player1",n):a.equalTo("player2",n),a.find()}function o(t){var n=t.get("player"),r=new e.Query("Match");return r.equalTo("status","active"),r.descending("createdAt"),"player1"===n?r.equalTo("player1",t):r.equalTo("player2",t),r.equalTo("confirm1",!0),r.equalTo("confirm2",!0),r.limit(1),r.find()}function s(n){var r=n.get("player"),a=new e.Query(t.Model);return a.descending("createdAt"),a.limit(1),"player1"===r?a.equalTo("player1",n):a.equalTo("player2",n),a.equalTo("status","pending"),a.limit(1),a.find()}function i(e){var n=new t.Model;return n.id=e,n.fetch()}e.User;return{getConfirmedMatch:o,getPendingMatch:s,getLatestMatch:a,getMatch:i,getPlayerMatches:r}}function Match(e){var t=e.Object.extend("Match"),n=["tournament","player1","player2","hero1","hero2","username1","username2","battleTag1","battleTag2","status","winner","loser","winImage","reportReason","reportImage","activeDate","user1","user2"];return e.defineAttributes(t,n),{Model:t}}function convertImage(){function e(e,t){var n=new Image;n.onload=function(){var e=document.createElement("canvas");e.width=this.naturalWidth,e.height=this.naturalHeight,e.getContext("2d").drawImage(this,0,0),t(e.toDataURL("image/png").replace(/^data:image\/(png|jpg);base64,/,""))},n.src=e}return{getDataUri:e}}function QueueServices(){var e={list:["Easy Pickings","Your Worst Nightmare","World class paste eater","A Murloc","Gourd critic","Nose and mouth breather","Hogger","A cardish Ian","Mopey Mage","Wombat Warlock","Rouged up Rogue","Waifish Warrior","Damp Druid","Shabby Shaman","Penniless Paladin","Huffy Hunter","Perky Priest","The Worst Player","Your Old Roommate","StarCraft Pro","Fiscally responsible mime","Your Guild Leader","Noneck George","Gum Pusher","Cheater McCheaterson","Really slow guy","Roach Boy","Orange Rhymer","Coffee Addict","Inward Talker","Blizzard Developer","Grand Master","Diamond League Player","Brand New Player","Dastardly Death Knight","Mediocre Monk","A Little Puppy"]},t=[{text:"mage",checked:!1},{text:"hunter",checked:!1},{text:"paladin",checked:!1},{text:"warrior",checked:!1},{text:"druid",checked:!1},{text:"warlock",checked:!1},{text:"shaman",checked:!1},{text:"priest",checked:!1},{text:"rogue",checked:!1}];return{opponent:e,heroes:t}}function TournamentServices(e,t,n,r,a){function o(t,n){var n=new a.Model(n);return n.set("tournament",t),n.set("user",e.User.current()),n.set("username",e.User.current().username),n.set("mmr",1e3),n.set("wins",0),n.set("losses",0),n.set("points",0),n.save()}function s(){var t=new e.Query(r.Model);return t.equalTo("type","ladder"),t.include("tournament"),t.find()}function i(){var e=t.defer(),a=new n.Model;return a.set("name","ONOG OPEN"),a.set("status","pending"),a.set("game","hearthstone"),a.save().then(function(t){var n=new r.Model;n.set("tournament",t),n.set("type","ladder"),n.set("playerCount",0),n.set("numOfGames",5),n.save().then(function(t){e.resolve(t)})}),e.promise}function l(t){var n=new e.Query(a.Model);return n.equalTo("tournament",t),n.include("player"),n.find()}return{getTournament:s,createTournament:i,getLadder:l,joinTournament:o}}function Tournament(e){var t=e.Object.extend("Tournament"),n=["name","game","status","disabled","disabledReason"];return e.defineAttributes(t,n),{Model:t}}function Details(e){var t=e.Object.extend("Details"),n=["tournament","type","numOfGames","playerCount"];return e.defineAttributes(t,n),{Model:t}}angular.module("ONOG",["ionic","ngParse","timer","ngCordova","ngAnimate","ONOG.Controllers","ONOG.Services"]),angular.module("ONOG").config(["$ionicConfigProvider","$compileProvider","ParseProvider",config]),angular.module("ONOG.Controllers",[]),angular.module("ONOG").config(["$stateProvider","$urlRouterProvider",routes]),angular.module("ONOG").constant("moment",moment).run(["$ionicPlatform","$state","$rootScope","$ionicLoading","$ionicPopup",run]),angular.module("ONOG.Services",[]),angular.module("ONOG.Controllers").controller("AdminMatchesCtrl",AdminMatchesCtrl),AdminMatchesCtrl.$inject=["$scope","Parse"],angular.module("ONOG.Controllers").controller("AdminPlayersCtrl",AdminPlayersCtrl),AdminPlayersCtrl.$inject=["$scope","Parse"],angular.module("ONOG.Controllers").controller("AdminSettingsCtrl",AdminSettingsCtrl),AdminSettingsCtrl.$inject=["$scope","TournamentServices","newTournament"],angular.module("ONOG.Controllers").controller("DashboardCtrl",["$scope","$state","$filter","$timeout","$interval","$ionicPopup","$rootScope","Parse","tournament","MatchServices","QueueServices","LadderServices",DashboardCtrl]),angular.module("ONOG.Controllers").controller("LadderJoinCtrl",["$scope","$filter","$ionicPopup","$state","$ionicHistory","$q","Parse","tournament","LadderServices",LadderJoinCtrl]),angular.module("ONOG.Controllers").controller("LeaderBoardsCtrl",LeaderBoardsCtrl),LeaderBoardsCtrl.$inject=["$scope","LadderServices","tournament","Parse","$filter","$ionicPopup"],angular.module("ONOG.Controllers").controller("LoginCtrl",LoginCtrl),LoginCtrl.$inject=["$scope","$state","Parse","$ionicHistory"],angular.module("ONOG.Controllers").controller("MatchListCtrl",MatchListCtrl),MatchListCtrl.$inject=["$scope","$state","$ionicPopup","Parse","MatchServices","player"],angular.module("ONOG.Controllers").controller("MatchReportCtrl",MatchReportCtrl),MatchReportCtrl.$inject=["$scope","$state","$rootScope","$ionicPopup","$ionicHistory","Parse","MatchServices","report"],angular.module("ONOG.Controllers").controller("MatchViewCtrl",MatchViewCtrl),MatchViewCtrl.$inject=["$scope","$state","$rootScope","$ionicPopup","$ionicHistory","Parse","LadderServices","MatchServices","QueueServices","tournament","match","player"],angular.module("ONOG.Controllers").controller("MenuCtrl",MenuCtrl),MenuCtrl.$inject=["$scope","$ionicPopover","$state","$ionicHistory","Parse","$timeout"],angular.module("ONOG.Controllers").controller("RegisterCtrl",RegisterCtrl),RegisterCtrl.$inject=["$scope","$state","Parse","$ionicPopup"],angular.module("ONOG").config(["$stateProvider",AdminRoutes]),angular.module("ONOG").config(["$stateProvider",LadderRoutes]),angular.module("ONOG").config(["$stateProvider",MatchRoutes]),angular.module("ONOG.Services").service("LadderServices",["Parse","Ladder",LadderServices]).factory("Ladder",["Parse",Ladder]),angular.module("ONOG.Services").service("MatchServices",["Parse","Match","$q",MatchServices]).factory("Match",["Parse",Match]),angular.module("ONOG.Services").service("convertImage",[convertImage]),angular.module("ONOG.Services").service("QueueServices",[QueueServices]),angular.module("ONOG.Services").service("TournamentServices",["Parse","$q","Tournament","Details","Ladder",TournamentServices]).factory("Tournament",["Parse",Tournament]).factory("Details",["Parse",Details]);