function config(e,t,r){t.imgSrcSanitizationWhitelist(/^\s*(https?|ftp|file|blob|content|ms-appx|x-wmapp0):|data:image\/|img\//),t.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|ghttps?|ms-appx|x-wmapp0):/),r.initialize("nYsB6tmBMYKYMzM5iV9BUcBvHWX89ItPX5GfbN6Q","zrin8GEBDVGbkl1ioGEwnHuP70FdG6HhzTS8uGjz"),ionic.Platform.isIOS()&&e.scrolling.jsScrolling(!0)}function routes(e,t){t.otherwise("app/dashboard"),e.state("app",{url:"/app","abstract":!0,cache:!1,templateUrl:"templates/menu.html",controller:"MenuCtrl",resolve:{tournament:function(e){return e.getTournament()}}}).state("app.dashboard",{url:"/dashboard",cache:!1,views:{menuContent:{templateUrl:"templates/dashboard.html",controller:"DashboardCtrl"}}}).state("app.login",{url:"/login",cache:!1,views:{menuContent:{templateUrl:"templates/login.html",controller:"LoginCtrl"}}}).state("app.register",{url:"/register",cache:!1,views:{menuContent:{templateUrl:"templates/register.html",controller:"RegisterCtrl"}}})}function run(e){e.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0)),window.StatusBar&&StatusBar.styleDefault(),window.ParsePushPlugin&&ParsePushPlugin.on("receivePN",function(e){alert("yo i got this push notification:"+JSON.stringify(e))})})}function AdminMatchesCtrl(e,t){}function AdminPlayersCtrl(e,t){}function AdminSettingsCtrl(e,t,r){e.details=r}function DashboardCtrl(e,t,r,n,a,o,s,l,i,u,c){function d(){e.player.save().then(function(t){e.player=t,p()})}function m(){return e.heroList=u.heroes,e.selected={status:!0},e.selectHero=function(t){return e.image=angular.element(document.querySelector(".heroClass"))[0].clientWidth,t.checked?(t.checked=!t.checked,void(e.selected.status=!0)):!t.checked&&e.selected.status?(t.checked=!t.checked,void(e.selected.status=!1)):void 0},o.show({templateUrl:"templates/popups/select.hero.html",title:"Select Hero Class",scope:e,buttons:[{text:"Cancel"},{text:"<b>Queue</b>",type:"button-positive",onTap:function(t){var n=r("filter")(e.heroList,{checked:!0},!0);return n.length?n[0]:void t.preventDefault()}}]})}function p(){switch(e.player.status){case"open":break;case"queue":n(v,7e3);break;case"found":y();break;case"confirmed":n(f,7e3);break;case"afk":h();break;case"playing":break;case"cancelled":C()}}function h(){o.show({title:"Match Error",template:'<div class="text-center"><strong>Your Opponent</strong><br> failed to confirm!</div>',buttons:[{text:"<b>Back</b>",type:"button-assertive",onTap:function(e){return!1}},{text:"<b>Queue Again</b>",type:"button-positive",onTap:function(e){return!0}}]}).then(function(t){t?(e.player.set("status","queue"),i.cancelMatch(e.user.current()).then(function(){d()})):(e.player.set("status","open"),d())})}function f(){s.Cloud.run("ConfirmMatch").then(function(){i.getConfirmedMatch().then(function(t){t.length&&(e.player.set("status","playing"),d())})})}function g(){c.getPlayer(e.tournament,e.user.current()).then(function(t){e.player=t[0],e.player&&p()})}function v(){s.Cloud.run("MatchMaking").then(function(){g()})}function y(){e.stop(),o.show({title:"Matchmaking",template:'<div class="text-center"><strong>A Worthy Opponent</strong><br> has been found!</div>',buttons:[{text:"<b>Cancel</b>",type:"button-assertive",onTap:function(e){return!1}},{text:"<b>Confirm</b>",type:"button-positive",onTap:function(e){return!0}}]}).then(function(t){t?i.getMatch("pending").then(function(t){t.length&&(e.player.set("status","confirmed"),"player1"===e.player.player?t[0].set("confirm1",!0):t[0].set("confirm2",!0),t[0].save().then(function(){d()}))}):C()})}function b(){}function C(){if(e.player.cancelTimer)moment(e.player.cancelTimer).isAfter()?(e.player.set("status","open"),e.player.unset("cancelTimer"),d()):b();else{var t=moment().add("2","minutes").format();e.player.set("status","cancelled"),e.player.set("cancelTimer",t),d()}}function O(){e.myOpponent.name=e.opponent.list[Math.floor(Math.random()*e.opponent.list.length)]}var T=null;e.user=s.User,e.previousMatch=null,e.tournament=l[0].tournament,e.opponent=u.opponent,e.myOpponent={name:"PAX Attendee"},g(),e.startQueue=function(){m().then(function(t){t&&(e.player.set("hero",t.text),e.player.set("status","queue"),d());var n=r("filter")(e.heroList,{checked:!0},!0);n[0].checked=!1})},e.cancelQueue=function(){e.player.set("status","open"),e.player.unset("hero"),e.stop(),d()},e.stop=function(){a.cancel(T)},e.startSearch=function(){e.stop(),T=a(function(){O()},2e3)},e.$on("$destroy",function(){e.stop()})}function LadderJoinCtrl(e,t,r,n,a,o,s,l,i){function u(){var t=o.defer(),r=e.player.battleTag;if(r.length<8)return t.reject("Enter your full battle tag"),t.promise;var n=r.split("#");return 2!==n.length?(t.reject("Enter your full BATTLETAG™ including # and four digits"),t.promise):n[1].length<2||n[1].length>4?(t.reject("Your BATTLETAG™ must including up to four digits after #!"),t.promise):isNaN(n[1])?(t.reject("Your BATTLETAG™ must including four digits after #"),t.promise):(i.validatePlayer(e.tournament.tournament,r).then(function(e){e.length?t.reject("The BATTLETAG™ you entered is already registered."):t.resolve(r)}),t.promise)}function c(e){return r.alert({title:"Registration Error",template:e})}function d(e){return r.alert({title:"Congratulations "+e.username+"!",template:"You have successfully signed up! Now go find a valiant opponent."})}a.nextViewOptions({disableBack:!0}),e.tournament=l[0].tournament,e.user=s.User.current(),e.player={battleTag:""},e.registerPlayer=function(){u().then(function(t){e.player.username=e.user.username,e.player.status="open",i.joinTournament(e.tournament,e.user,e.player).then(function(e){d(e).then(function(e){n.go("app.dashboard")})})},function(e){c(e)})}}function LeaderBoardsCtrl(e,t,r,n,a,o){e.user=n.User,t.getPlayers(r[0].tournament).then(function(t){var r=1;angular.forEach(t,function(e){e.rank=r,r++}),e.players=t}),e.showDetails=function(t){e.heroes=t.heroes,o.alert({title:t.username+" Heroes",scope:e,template:'<div class="row"><div class="col-25 text-center" ng-repeat="hero in heroes"><img ng-src="img/icons/{{hero}}.png" class="responsive-img" style="padding:3px;">{{hero}}</div></div>'})}}function LoginCtrl(e,t,r,n){e.user={},r.User.logOut(),e.loginUser=function(){r.User.logIn(e.user.username,e.user.password,{success:function(e){n.nextViewOptions({disableBack:!0}),t.go("app.dashboard")},error:function(t,r){e.warning=r.message}})},e.$watch("user",function(t,r){e.warning=null},!0)}function MatchViewCtrl(e,t,r,n,a,o,s,l,i,u,c){function d(){e.opponent={hero:null,battleTag:null},"player1"===e.player.player&&(e.opponent.hero=e.match.hero2,e.opponent.username=e.match.username2,e.opponent.battleTag=e.match.battleTag2,e.opponent.user=e.match.user2),"player2"===e.player.player&&(e.opponent.hero=e.match.hero1,e.opponent.username=e.match.username1,e.opponent.battleTag=e.match.battleTag1,e.opponent.user=e.match.user1)}e.count=0,e.match=c[0],e.tournament=u[0].tournament,e.user=o.User.current(),s.getPlayer(e.tournament,e.user).then(function(t){e.player=t[0],e.player&&d()}),e.record=function(r){l.getMatch("active").then(function(o){if(o.length){var s=o[0];switch(r){case"win":s.set("winner",e.user),s.set("loser",e.opponent.user);break;case"loss":s.set("winner",e.opponent.user),s.set("loser",e.user)}s.set("status","completed"),s.save().then(function(){e.player.set("status","open"),e.player.save().then(function(){n.alert({title:"Match Submitted",template:'<div class="text-center">Thank you for submitting results</div>'}).then(function(e){a.nextViewOptions({disableBack:!0}),t.go("app.dashboard")})})})}else n.alert({title:"Match Error",template:'<div class="text-center">Your Opponent has already updated results!</div>'}).then(function(e){a.nextViewOptions({disableBack:!0}),t.go("app.dashboard")})})}}function MenuCtrl(e,t,r,n,a){e.user=a.User,t.fromTemplateUrl("templates/popovers/profile.pop.html",{scope:e}).then(function(t){e.popover=t}),e.menu=function(t){n.nextViewOptions({disableBack:!0}),r.go("app."+t,{reload:!0}),e.popover.hide()},e.$on("$destroy",function(){e.popover.remove()})}function RegisterCtrl(e,t,r,n){function a(e){return n.alert({title:"Registration Error",template:e})}e.user={},e.RegisterUser=function(e){var n=new r.User;n.set(e),n.signUp(null,{success:function(e){t.go("app.dashboard")},error:function(e,t){a(t.message)}})},e.$watch("user",function(t,r){e.warning=null},!0)}function AdminRoutes(e){e.state("app.admin",{url:"/admin","abstract":!0,cache:!1,views:{menuContent:{templateUrl:"templates/admin/admin.html"}}}).state("app.admin.settings",{url:"/settings",cache:!1,templateUrl:"templates/admin/admin.settings.html",controller:"AdminSettingsCtrl",resolve:{tourney:function(e){return e.getTournament()},newTournament:function(e,t){return t.length?t[0]:e.createTournament()}}}).state("app.admin.matches",{url:"/matches",cache:!1,templateUrl:"templates/admin/admin.matches.html",controller:"AdminMatchesCtrl"})}function LadderRoutes(e){e.state("app.ladder",{url:"/ladder","abstract":!0,cache:!1,views:{menuContent:{templateUrl:"templates/ladder/ladder.html"}}}).state("app.ladder.leaderboard",{url:"/leaderboards",cache:!1,templateUrl:"templates/ladder/leaderboard.html",controller:"LeaderBoardsCtrl"}).state("app.ladder.join",{url:"/join",cache:!1,templateUrl:"templates/ladder/join.html",controller:"LadderJoinCtrl"})}function MatchRoutes(e){e.state("app.match",{url:"/match","abstract":!0,cache:!1,views:{menuContent:{templateUrl:"templates/match/match.html"}}}).state("app.match.view",{url:"/view",cache:!1,templateUrl:"templates/match/match.view.html",controller:"MatchViewCtrl",resolve:{match:function(e,t,r){var n=r.defer();return e.getMatch("active").then(function(e){e.length?n.resolve(e):(n.reject(),t.go("app.dashboard"))}),n.promise}}})}function LadderServices(e,t){function r(r){var n=new e.Query(t.Model);return n.equalTo("tournament",r),n.descending("points","mmr"),n.find()}function n(r,n){var a=new e.Query(t.Model);return a.equalTo("tournament",r),a.equalTo("battleTag",n),a.find()}function a(r,n){var a=new e.Query(t.Model);return a.equalTo("tournament",r),a.equalTo("user",n),a.limit(1),a.find()}function o(e,r,n){var a=new t.Model(n);return a.set("tournament",e),a.set("user",r),a.save()}return{getPlayers:r,getPlayer:a,validatePlayer:n,joinTournament:o}}function Ladder(e){var t=e.Object.extend("Ladder"),r=["tournament","user","battleTag","username","hero","player","status","cancelTimer","wins","losses","mmr","points"];return e.defineAttributes(t,r),{Model:t}}function MatchServices(e,t){function r(){var t=new e.Query("Match");t.equalTo("username1",a.username);var r=new e.Query("Match");r.equalTo("username2",a.username);var n=e.Query.or(t,r);return n.equalTo("status","active"),n.equalTo("confirm1",!0),n.equalTo("confirm2",!0),n.find()}function n(t){var r=new e.Query("Match");r.equalTo("username1",a.username);var n=new e.Query("Match");n.equalTo("username2",a.username);var o=e.Query.or(r,n);return o.equalTo("status",t),o.find()}var a=e.User.current();return{getMatch:n,getConfirmedMatch:r}}function Match(e){var t=e.Object.extend("Match"),r=["tournament","player1","player2","hero1","hero2","username1","username2","battleTag1","battleTag2","status","winner","loser","screenshot","report","reportedScreenshot","activeDate","user1","user2"];return e.defineAttributes(t,r),{Model:t}}function QueueServices(){var e={list:["Easy Pickings","Your Worst Nightmare","World class paste eater","A Murloc","Gourd critic","Nose and mouth breather","Hogger","A cardish Ian","Mopey Mage","Wombat Warlock","Rouged up Rogue","Waifish Warrior","Damp Druid","Shabby Shaman","Penniless Paladin","Huffy Hunter","Perky Priest","The Worst Player","Your Old Roommate","StarCraft Pro","Fiscally responsible mime","Your Guild Leader","Noneck George","Gum Pusher","Cheater McCheaterson","Really slow guy","Roach Boy","Orange Rhymer","Coffee Addict","Inward Talker","Blizzard Developer","Grand Master","Diamond League Player","Brand New Player","Dastardly Death Knight","Mediocre Monk","A Little Puppy"]},t=[{text:"mage",checked:!1},{text:"hunter",checked:!1},{text:"paladin",checked:!1},{text:"warrior",checked:!1},{text:"druid",checked:!1},{text:"warlock",checked:!1},{text:"shaman",checked:!1},{text:"priest",checked:!1},{text:"rogue",checked:!1}];return{opponent:e,heroes:t}}function TournamentServices(e,t,r,n,a){function o(t,r){var r=new a.Model(r);return r.set("tournament",t),r.set("user",e.User.current()),r.set("username",e.User.current().username),r.set("mmr",1e3),r.set("wins",0),r.set("losses",0),r.set("points",0),r.save()}function s(){var t=new e.Query(n.Model);return t.equalTo("type","ladder"),t.include("tournament"),t.find()}function l(){var e=t.defer(),a=new r.Model;return a.set("name","ONOG OPEN"),a.set("status","pending"),a.set("game","hearthstone"),a.save().then(function(t){var r=new n.Model;r.set("tournament",t),r.set("type","ladder"),r.set("playerCount",0),r.set("numOfGames",5),r.save().then(function(t){e.resolve(t)})}),e.promise}function i(t){var r=new e.Query(a.Model);return r.equalTo("tournament",t),r.include("player"),r.find()}return{getTournament:s,createTournament:l,getLadder:i,joinTournament:o}}function Tournament(e){var t=e.Object.extend("Tournament"),r=["name","game","status","disabled","disabledReason"];return e.defineAttributes(t,r),{Model:t}}function Details(e){var t=e.Object.extend("Details"),r=["tournament","type","numOfGames","playerCount"];return e.defineAttributes(t,r),{Model:t}}angular.module("ONOG",["ionic","ngParse","ngCordova","ngAnimate","ONOG.Controllers","ONOG.Services"]),angular.module("ONOG").config(["$ionicConfigProvider","$compileProvider","ParseProvider",config]),angular.module("ONOG.Controllers",[]),angular.module("ONOG").config(["$stateProvider","$urlRouterProvider",routes]),angular.module("ONOG").constant("moment",moment).run(["$ionicPlatform",run]),angular.module("ONOG.Services",[]),angular.module("ONOG.Controllers").controller("AdminMatchesCtrl",AdminMatchesCtrl),AdminMatchesCtrl.$inject=["$scope","Parse"],angular.module("ONOG.Controllers").controller("AdminPlayersCtrl",AdminPlayersCtrl),AdminPlayersCtrl.$inject=["$scope","Parse"],angular.module("ONOG.Controllers").controller("AdminSettingsCtrl",AdminSettingsCtrl),AdminSettingsCtrl.$inject=["$scope","TournamentServices","newTournament"],angular.module("ONOG.Controllers").controller("DashboardCtrl",["$scope","$state","$filter","$timeout","$interval","$ionicPopup","Parse","tournament","MatchServices","QueueServices","LadderServices",DashboardCtrl]),angular.module("ONOG.Controllers").controller("LadderJoinCtrl",["$scope","$filter","$ionicPopup","$state","$ionicHistory","$q","Parse","tournament","LadderServices",LadderJoinCtrl]),angular.module("ONOG.Controllers").controller("LeaderBoardsCtrl",LeaderBoardsCtrl),LeaderBoardsCtrl.$inject=["$scope","LadderServices","tournament","Parse","$filter","$ionicPopup"],angular.module("ONOG.Controllers").controller("LoginCtrl",LoginCtrl),LoginCtrl.$inject=["$scope","$state","Parse","$ionicHistory"],angular.module("ONOG.Controllers").controller("MatchViewCtrl",MatchViewCtrl),MatchViewCtrl.$inject=["$scope","$state","$timeout","$ionicPopup","$ionicHistory","Parse","LadderServices","MatchServices","QueueServices","tournament","match"],angular.module("ONOG.Controllers").controller("MenuCtrl",MenuCtrl),MenuCtrl.$inject=["$scope","$ionicPopover","$state","$ionicHistory","Parse"],angular.module("ONOG.Controllers").controller("RegisterCtrl",RegisterCtrl),RegisterCtrl.$inject=["$scope","$state","Parse","$ionicPopup"],angular.module("ONOG").config(["$stateProvider",AdminRoutes]),angular.module("ONOG").config(["$stateProvider",LadderRoutes]),angular.module("ONOG").config(["$stateProvider",MatchRoutes]),angular.module("ONOG.Services").service("LadderServices",["Parse","Ladder",LadderServices]).factory("Ladder",["Parse",Ladder]),angular.module("ONOG.Services").service("MatchServices",["Parse","Match",MatchServices]).factory("Match",["Parse",Match]),angular.module("ONOG.Services").service("QueueServices",[QueueServices]),angular.module("ONOG.Services").service("TournamentServices",["Parse","$q","Tournament","Details","Ladder",TournamentServices]).factory("Tournament",["Parse",Tournament]).factory("Details",["Parse",Details]);