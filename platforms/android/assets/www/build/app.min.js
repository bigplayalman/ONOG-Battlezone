function config(e,t,n){t.imgSrcSanitizationWhitelist(/^\s*(https?|ftp|file|blob|content|ms-appx|x-wmapp0):|data:image\/|img\//),t.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|ghttps?|ms-appx|x-wmapp0):/),n.initialize("nYsB6tmBMYKYMzM5iV9BUcBvHWX89ItPX5GfbN6Q","zrin8GEBDVGbkl1ioGEwnHuP70FdG6HhzTS8uGjz"),ionic.Platform.isIOS()&&e.scrolling.jsScrolling(!0)}function routes(e,t){t.otherwise("app/dashboard"),e.state("app",{url:"/app","abstract":!0,cache:!1,templateUrl:"templates/menu.html",controller:"MenuCtrl",resolve:{tournament:function(e){return e.getTournament()}}}).state("app.dashboard",{url:"/dashboard",cache:!1,views:{menuContent:{templateUrl:"templates/dashboard.html",controller:"DashboardCtrl"}}}).state("app.login",{url:"/login",cache:!1,views:{menuContent:{templateUrl:"templates/login.html",controller:"LoginCtrl"}}}).state("app.register",{url:"/register",cache:!1,views:{menuContent:{templateUrl:"templates/register.html",controller:"RegisterCtrl"}}})}function run(e,t,n,r,a){e.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0)),window.StatusBar&&StatusBar.styleDefault(),n.$on("show:loading",function(){r.show({template:'<ion-spinner icon="spiral" class="spinner-calm"></ion-spinner>',showBackdrop:!0,animation:"fade-in"})}),n.$on("hide:loading",function(){r.hide()}),window.ParsePushPlugin&&t.go("app.dashboard")})}function AdminMatchesCtrl(e,t){}function AdminPlayersCtrl(e,t){}function AdminSettingsCtrl(e,t,n){e.details=n}function DashboardCtrl(e,t,n,r,a,o,s,i,l,u,c,d){function p(){e.player.save().then(function(t){e.player=t,h()})}function m(){return $(),e.selected={status:!0},e.selectHero=function(t){return e.image=angular.element(document.querySelector(".heroClass"))[0].clientWidth,t.checked?(t.checked=!t.checked,void(e.selected.status=!0)):!t.checked&&e.selected.status?(t.checked=!t.checked,void(e.selected.status=!1)):void 0},o.show({templateUrl:"templates/popups/select.hero.html",title:"Select Hero Class",scope:e,buttons:[{text:"Cancel"},{text:"<b>Queue</b>",type:"button-positive",onTap:function(t){var r=n("filter")(e.heroList,{checked:!0},!0);return r.length?r[0]:void t.preventDefault()}}]})}function h(){switch(e.player.status){case"open":break;case"queue":e.showOpponents(),g();break;case"found":b();break;case"confirmed":O();break;case"noOpponent":M();break;case"playing":break;case"cancelled":w()}}function f(t){var t=t;d.getPlayer(e.tournament,e.user.current()).then(function(n){e.player=n[0],e.player&&h(),t&&e.$broadcast("scroll.refreshComplete")})}function g(){e.matchmaking<3?r(function(){i.Cloud.run("matchmaking").then(function(t){f(!1),e.matchmaking++,console.log(e.matchmaking)})},1e4):(e.cancelQueue(),v())}function v(){o.alert({title:"Please try again",template:'<div class="text-center">No Opponents have been found at this time.</div>'})}function y(){e.player.set("status","found"),p()}function b(){if(e.stop(),!e.foundCount){var t=o.show({title:"Matchmaking",template:'<div class="text-center"><strong>A Worthy Opponent</strong><br> has been found!</div>',buttons:[{text:"<b>Cancel</b>",type:"button-assertive",onTap:function(e){return!1}},{text:"<b>Confirm</b>",type:"button-positive",onTap:function(e){return!0}}]});e.foundCount++}t.then(function(t){t?u.getMatch("pending").then(function(t){t.length&&(e.player.set("status","confirmed"),"player1"===e.player.player?t[0].set("confirm1",!0):t[0].set("confirm2",!0),t[0].save().then(function(){e.foundCount=0,p()}))}):(e.foundCount=0,w())}),r(function(){"confirmed"!==e.player.get("status")&&b.close(!1)},6e4)}function w(){if(e.player.get("cancelTimer"))moment(e.player.get("cancelTimer")).isAfter()?(e.player.set("status","open"),e.player.unset("cancelTimer"),p()):C();else{var t=moment().add("2","minutes").format();e.player.set("status","cancelled"),e.player.set("cancelTimer",t),p()}}function C(){}function P(){e.player.set("status","playing"),e.player.save().then(function(){t.go("app.match.view")})}function O(){i.Cloud.run("confirmMatch").then(function(n){u.getConfirmedMatch().then(function(n){n.length&&(e.player.set("status","playing"),s.$broadcast("show:loading"),e.player.save().then(function(){s.$broadcast("hide:loading"),t.go("app.match.view")}))}),n||r(function(){"confirmed"===e.player.get("status")&&u.getConfirmedMatch().then(function(n){n.length?(e.player.set("status","playing"),e.player.save().then(function(){t.go("app.match.view")})):(e.player.set("status","noOpponent"),p())})},6e4)})}function T(){o.alert({title:"Match Results Entered",template:'<div class="text-center">Your Opponent has entered the results!</div>'}).then(function(t){e.player.set("status","open"),e.player.save().then(function(){h()})})}function M(){o.show({title:"Match Error",template:'<div class="text-center"><strong>Your Opponent</strong><br> failed to confirm!</div>',buttons:[{text:"<b>Back</b>",type:"button-assertive",onTap:function(e){return!1}},{text:"<b>Queue Again</b>",type:"button-positive",onTap:function(e){return!0}}]}).then(function(t){t?(e.player.set("status","queue"),u.cancelMatch(e.user.current(),e.player.player).then(function(){p()})):(e.player.set("status","open"),p())})}function $(){window.ParsePushPlugin&&ParsePushPlugin.subscribe(e.player.username,function(e){console.log("subbed")},function(e){console.log("failed to sub")})}function S(){e.myOpponent.name=e.opponent.list[Math.floor(Math.random()*e.opponent.list.length)]}var k=null;e.foundCount=0,e.user=i.User,e.tournament=l[0].tournament,e.opponent=c.opponent,e.heroList=c.heroes,e.myOpponent={name:"PAX Attendee"},window.ParsePushPlugin&&ParsePushPlugin.on("receivePN",function(e){if(e.title)switch(e.title){case"opponent:found":y();break;case"opponent:confirmed":P();break;case"match:results":T()}}),f(!1),e.doRefresh=function(){f(!0)},e.startQueue=function(){var t=n("filter")(e.heroList,{checked:!0},!0);t.length&&(t[0].checked=!1),m().then(function(t){t&&(e.matchmaking=0,e.player.set("hero",t.text),e.player.set("status","queue"),p())})},e.cancelQueue=function(){e.player.set("status","open"),e.player.unset("hero"),e.stop(),p()},e.stop=function(){a.cancel(k)},e.showOpponents=function(){e.stop(),k=a(function(){S()},2e3)},e.$on("$destroy",function(){e.stop()})}function LadderJoinCtrl(e,t,n,r,a,o,s,i,l){function u(){var t=o.defer(),n=e.player.battleTag;if(n.length<8)return t.reject("Enter your full battle tag"),t.promise;var r=n.split("#");return 2!==r.length?(t.reject("Enter your full BATTLETAG™ including # and four digits"),t.promise):r[1].length<2||r[1].length>4?(t.reject("Your BATTLETAG™ must including up to four digits after #!"),t.promise):isNaN(r[1])?(t.reject("Your BATTLETAG™ must including four digits after #"),t.promise):(l.validatePlayer(e.tournament.tournament,n).then(function(e){e.length?t.reject("The BATTLETAG™ you entered is already registered."):t.resolve(n)}),t.promise)}function c(e){return n.alert({title:"Registration Error",template:e})}function d(e){return n.alert({title:"Congratulations "+e.username+"!",template:"You have successfully signed up! Now go find a valiant opponent."})}a.nextViewOptions({disableBack:!0}),e.tournament=i[0].tournament,e.user=s.User.current(),e.player={battleTag:""},e.registerPlayer=function(){u().then(function(t){e.player.username=e.user.username,e.player.status="open",l.joinTournament(e.tournament,e.user,e.player).then(function(e){d(e).then(function(e){r.go("app.dashboard")})})},function(e){c(e)})}}function LeaderBoardsCtrl(e,t,n,r,a,o){e.user=r.User,t.getPlayers(n[0].tournament).then(function(t){var n=1;angular.forEach(t,function(e){e.rank=n,n++}),e.players=t}),e.showDetails=function(t){e.heroes=t.heroes,o.alert({title:t.username+" Heroes",scope:e,template:'<div class="row"><div class="col-25 text-center" ng-repeat="hero in heroes"><img ng-src="img/icons/{{hero}}.png" class="responsive-img" style="padding:3px;">{{hero}}</div></div>'})}}function LoginCtrl(e,t,n,r){e.user={},n.User.logOut(),e.loginUser=function(){n.User.logIn(e.user.username,e.user.password,{success:function(e){r.nextViewOptions({disableBack:!0}),t.go("app.dashboard")},error:function(t,n){e.warning=n.message}})},e.$watch("user",function(t,n){e.warning=null},!0)}function MatchViewCtrl(e,t,n,r,a,o,s,i,l,u,c){function d(){e.opponent={hero:null,battleTag:null},"player1"===e.player.player&&(e.opponent.hero=e.match.hero2,e.opponent.username=e.match.username2,e.opponent.battleTag=e.match.battleTag2,e.opponent.user=e.match.user2),"player2"===e.player.player&&(e.opponent.hero=e.match.hero1,e.opponent.username=e.match.username1,e.opponent.battleTag=e.match.battleTag1,e.opponent.user=e.match.user1)}e.match=c[0],e.tournament=u[0].tournament,e.user=o.User,a.nextViewOptions({disableBack:!0}),window.ParsePushPlugin&&ParsePushPlugin.on("receivePN",function(e){if(e.title)switch(e.title){case"match:results":t.go("app.dashboard")}}),s.getPlayer(e.tournament,e.user.current()).then(function(t){e.player=t[0],e.player&&d()}),e.record=function(a){i.getMatch("active").then(function(s){var i=null;if(s.length){var l=s[0];switch(a){case"win":l.set("winner",e.user.current()),l.set("loser",e.opponent.user),i=e.opponent.username;break;case"loss":l.set("winner",e.opponent.user),l.set("loser",e.user.current()),i=e.user.current().username}l.set("status","completed"),l.save().then(function(){e.player.set("status","open"),e.player.save().then(function(){r.alert({title:"Match Submitted",template:'<div class="text-center">Thank you for submitting results</div>'}).then(function(e){n.$broadcast("show:loading"),o.Cloud.run("matchResults",{username:i}).then(function(e){n.$broadcast("hide:loading"),t.go("app.dashboard")})})})})}else showResultsPopup()})}}function MenuCtrl(e,t,n,r,a,o){e.user=a.User,t.fromTemplateUrl("templates/popovers/profile.pop.html",{scope:e}).then(function(t){e.popover=t}),e.menu=function(t){r.nextViewOptions({disableBack:!0}),n.go("app."+t,{reload:!0}),e.popover.hide()},e.$on("$destroy",function(){e.popover.remove()}),e.$on("$ionicView.loaded",function(){ionic.Platform.ready(function(){navigator&&navigator.splashscreen&&navigator.splashscreen.hide()})})}function RegisterCtrl(e,t,n,r){function a(e){return r.alert({title:"Registration Error",template:e})}e.user={},e.RegisterUser=function(e){var r=new n.User;r.set(e),r.signUp(null,{success:function(e){t.go("app.dashboard")},error:function(e,t){a(t.message)}})},e.$watch("user",function(t,n){e.warning=null},!0)}function AdminRoutes(e){e.state("app.admin",{url:"/admin","abstract":!0,cache:!1,views:{menuContent:{templateUrl:"templates/admin/admin.html"}}}).state("app.admin.settings",{url:"/settings",cache:!1,templateUrl:"templates/admin/admin.settings.html",controller:"AdminSettingsCtrl",resolve:{tourney:function(e){return e.getTournament()},newTournament:function(e,t){return t.length?t[0]:e.createTournament()}}}).state("app.admin.matches",{url:"/matches",cache:!1,templateUrl:"templates/admin/admin.matches.html",controller:"AdminMatchesCtrl"})}function LadderRoutes(e){e.state("app.ladder",{url:"/ladder","abstract":!0,cache:!1,views:{menuContent:{templateUrl:"templates/ladder/ladder.html"}}}).state("app.ladder.leaderboard",{url:"/leaderboards",cache:!1,templateUrl:"templates/ladder/leaderboard.html",controller:"LeaderBoardsCtrl"}).state("app.ladder.join",{url:"/join",cache:!1,templateUrl:"templates/ladder/join.html",controller:"LadderJoinCtrl"})}function MatchRoutes(e){e.state("app.match",{url:"/match","abstract":!0,cache:!1,views:{menuContent:{templateUrl:"templates/match/match.html"}}}).state("app.match.view",{url:"/view",cache:!1,templateUrl:"templates/match/match.view.html",controller:"MatchViewCtrl",resolve:{match:function(e,t,n){var r=n.defer();return e.getMatch("active").then(function(e){e.length?r.resolve(e):(r.reject(),t.go("app.dashboard"))}),r.promise}}})}function LadderServices(e,t){function n(n,r){var a=new e.Query(t.Model);return a.equalTo("tournament",tourney),a.notEqualTO("user",r),a.equalTo("status","queue"),a.find()}function r(n){var r=new e.Query(t.Model);return r.equalTo("tournament",n),r.descending("points","mmr"),r.find()}function a(n,r){var a=new e.Query(t.Model);return a.equalTo("tournament",n),a.equalTo("battleTag",r),a.find()}function o(n,r){var a=new e.Query(t.Model);return a.equalTo("tournament",n),a.equalTo("user",r),a.limit(1),a.find()}function s(e,n,r){var a=new t.Model(r);return a.set("tournament",e),a.set("user",n),a.save()}return{getPlayers:r,getPlayer:o,validatePlayer:a,joinTournament:s,getPendingPlayers:n}}function Ladder(e){var t=e.Object.extend("Ladder"),n=["tournament","user","battleTag","username","hero","player","status","cancelTimer","wins","losses","mmr","points"];return e.defineAttributes(t,n),{Model:t}}function MatchServices(e,t,n){function r(){var t=new e.Query("Match");t.equalTo("username1",s.current().username);var n=new e.Query("Match");n.equalTo("username2",s.current().username);var r=e.Query.or(t,n);return r.equalTo("status","active"),r.equalTo("confirm1",!0),r.equalTo("confirm2",!0),r.find()}function a(t){var n=new e.Query("Match");n.equalTo("username1",s.current().username);var r=new e.Query("Match");r.equalTo("username2",s.current().username);var a=e.Query.or(n,r);return a.equalTo("status",t),a.find()}function o(r,a){var o=n.defer(),s=new e.Query(t.Model);return(a="player1")?s.equalTo("user1",r):s.equalTo("user2",r),s.equalTo("status","pending"),s.find().then(function(t){e.Object.destroyAll(t).then(function(){o.resolve(!0)})}),o.promise}var s=e.User;return{getMatch:a,getConfirmedMatch:r,cancelMatch:o}}function Match(e){var t=e.Object.extend("Match"),n=["tournament","player1","player2","hero1","hero2","username1","username2","battleTag1","battleTag2","status","winner","loser","screenshot","report","reportedScreenshot","activeDate","user1","user2"];return e.defineAttributes(t,n),{Model:t}}function QueueServices(){var e={list:["Easy Pickings","Your Worst Nightmare","World class paste eater","A Murloc","Gourd critic","Nose and mouth breather","Hogger","A cardish Ian","Mopey Mage","Wombat Warlock","Rouged up Rogue","Waifish Warrior","Damp Druid","Shabby Shaman","Penniless Paladin","Huffy Hunter","Perky Priest","The Worst Player","Your Old Roommate","StarCraft Pro","Fiscally responsible mime","Your Guild Leader","Noneck George","Gum Pusher","Cheater McCheaterson","Really slow guy","Roach Boy","Orange Rhymer","Coffee Addict","Inward Talker","Blizzard Developer","Grand Master","Diamond League Player","Brand New Player","Dastardly Death Knight","Mediocre Monk","A Little Puppy"]},t=[{text:"mage",checked:!1},{text:"hunter",checked:!1},{text:"paladin",checked:!1},{text:"warrior",checked:!1},{text:"druid",checked:!1},{text:"warlock",checked:!1},{text:"shaman",checked:!1},{text:"priest",checked:!1},{text:"rogue",checked:!1}];return{opponent:e,heroes:t}}function TournamentServices(e,t,n,r,a){function o(t,n){var n=new a.Model(n);return n.set("tournament",t),n.set("user",e.User.current()),n.set("username",e.User.current().username),n.set("mmr",1e3),n.set("wins",0),n.set("losses",0),n.set("points",0),n.save()}function s(){var t=new e.Query(r.Model);return t.equalTo("type","ladder"),t.include("tournament"),t.find()}function i(){var e=t.defer(),a=new n.Model;return a.set("name","ONOG OPEN"),a.set("status","pending"),a.set("game","hearthstone"),a.save().then(function(t){var n=new r.Model;n.set("tournament",t),n.set("type","ladder"),n.set("playerCount",0),n.set("numOfGames",5),n.save().then(function(t){e.resolve(t)})}),e.promise}function l(t){var n=new e.Query(a.Model);return n.equalTo("tournament",t),n.include("player"),n.find()}return{getTournament:s,createTournament:i,getLadder:l,joinTournament:o}}function Tournament(e){var t=e.Object.extend("Tournament"),n=["name","game","status","disabled","disabledReason"];return e.defineAttributes(t,n),{Model:t}}function Details(e){var t=e.Object.extend("Details"),n=["tournament","type","numOfGames","playerCount"];return e.defineAttributes(t,n),{Model:t}}angular.module("ONOG",["ionic","ngParse","ngCordova","ngAnimate","ONOG.Controllers","ONOG.Services"]),angular.module("ONOG").config(["$ionicConfigProvider","$compileProvider","ParseProvider",config]),angular.module("ONOG.Controllers",[]),angular.module("ONOG").config(["$stateProvider","$urlRouterProvider",routes]),angular.module("ONOG").constant("moment",moment).run(["$ionicPlatform","$state","$rootScope","$ionicLoading",run]),angular.module("ONOG.Services",[]),angular.module("ONOG.Controllers").controller("AdminMatchesCtrl",AdminMatchesCtrl),AdminMatchesCtrl.$inject=["$scope","Parse"],angular.module("ONOG.Controllers").controller("AdminPlayersCtrl",AdminPlayersCtrl),AdminPlayersCtrl.$inject=["$scope","Parse"],angular.module("ONOG.Controllers").controller("AdminSettingsCtrl",AdminSettingsCtrl),AdminSettingsCtrl.$inject=["$scope","TournamentServices","newTournament"],angular.module("ONOG.Controllers").controller("DashboardCtrl",["$scope","$state","$filter","$timeout","$interval","$ionicPopup","$rootScope","Parse","tournament","MatchServices","QueueServices","LadderServices",DashboardCtrl]),angular.module("ONOG.Controllers").controller("LadderJoinCtrl",["$scope","$filter","$ionicPopup","$state","$ionicHistory","$q","Parse","tournament","LadderServices",LadderJoinCtrl]),angular.module("ONOG.Controllers").controller("LeaderBoardsCtrl",LeaderBoardsCtrl),LeaderBoardsCtrl.$inject=["$scope","LadderServices","tournament","Parse","$filter","$ionicPopup"],angular.module("ONOG.Controllers").controller("LoginCtrl",LoginCtrl),LoginCtrl.$inject=["$scope","$state","Parse","$ionicHistory"],angular.module("ONOG.Controllers").controller("MatchViewCtrl",MatchViewCtrl),MatchViewCtrl.$inject=["$scope","$state","$rootScope","$ionicPopup","$ionicHistory","Parse","LadderServices","MatchServices","QueueServices","tournament","match"],angular.module("ONOG.Controllers").controller("MenuCtrl",MenuCtrl),MenuCtrl.$inject=["$scope","$ionicPopover","$state","$ionicHistory","Parse","$timeout"],angular.module("ONOG.Controllers").controller("RegisterCtrl",RegisterCtrl),RegisterCtrl.$inject=["$scope","$state","Parse","$ionicPopup"],angular.module("ONOG").config(["$stateProvider",AdminRoutes]),angular.module("ONOG").config(["$stateProvider",LadderRoutes]),angular.module("ONOG").config(["$stateProvider",MatchRoutes]),angular.module("ONOG.Services").service("LadderServices",["Parse","Ladder",LadderServices]).factory("Ladder",["Parse",Ladder]),angular.module("ONOG.Services").service("MatchServices",["Parse","Match","$q",MatchServices]).factory("Match",["Parse",Match]),angular.module("ONOG.Services").service("QueueServices",[QueueServices]),angular.module("ONOG.Services").service("TournamentServices",["Parse","$q","Tournament","Details","Ladder",TournamentServices]).factory("Tournament",["Parse",Tournament]).factory("Details",["Parse",Details]);